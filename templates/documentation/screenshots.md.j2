# EuroStyle Screenshots Documentation

_Auto-generated on {{ generation_timestamp }}_  
_**Do not edit this file manually** - Regenerate with: `python3 scripts/utilities/generate_screenshots_doc.py`_

## Overview

This document catalogs all visual assets used in the EuroStyle Retail Demo Platform documentation. All screenshots are managed through the configuration-driven system following WARP.md principles.

**ðŸ“Š Statistics**:
- Total screenshots: {{ total_screenshots }}
- Valid files: {{ valid_files }}
- Missing files: {{ missing_files }}
{% if errors %}
- Errors: {{ errors|length }}
{% endif %}

## Architecture Overview

{% for screenshot in screenshots %}
{% if "architecture" in screenshot.manifest_tags %}
### {{ screenshot.manifest_title }}

![{{ screenshot.manifest_title }}]({{ screenshot.file }})

**Alt Text**: {{ screenshot.alt }}

**Caption**: {{ screenshot.caption }}

**Description**: {{ screenshot.description }}

**File Details**:
- **Path**: `{{ screenshot.file }}`
- **Dimensions**: {{ screenshot.dimensions.width }}x{{ screenshot.dimensions.height }} pixels
- **Size**: {{ screenshot.file_size_human }}
- **Format**: {{ screenshot.format }}
- **Last Modified**: {{ screenshot.last_modified }}

**Used In**: 
{% for usage in screenshot.used_in_docs %}
- {{ usage }}
{% endfor %}

---
{% endif %}
{% endfor %}

## Database Structures

{% for screenshot in screenshots %}
{% if "database" in screenshot.manifest_tags %}
### {{ screenshot.manifest_title }}

![{{ screenshot.manifest_title }}]({{ screenshot.file }})

**Alt Text**: {{ screenshot.alt }}

**Caption**: {{ screenshot.caption }}

**Description**: {{ screenshot.description }}

**File Details**:
- **Path**: `{{ screenshot.file }}`
- **Dimensions**: {{ screenshot.dimensions.width }}x{{ screenshot.dimensions.height }} pixels ({{ screenshot.aspect_ratio }}:1 ratio)
- **Size**: {{ screenshot.file_size_human }}
- **Format**: {{ screenshot.format }}
- **Last Modified**: {{ screenshot.last_modified }}

**Tags**: {% for tag in screenshot.manifest_tags %}{{ tag }}{% if not loop.last %}, {% endif %}{% endfor %}

**Used In**: 
{% for usage in screenshot.used_in_docs %}
- {{ usage }}
{% endfor %}

---
{% endif %}
{% endfor %}

## Query Examples

{% for screenshot in screenshots %}
{% if "query" in screenshot.manifest_tags %}
### {{ screenshot.manifest_title }}

![{{ screenshot.manifest_title }}]({{ screenshot.file }})

**Alt Text**: {{ screenshot.alt }}

**Caption**: {{ screenshot.caption }}

**Description**: {{ screenshot.description }}

**File Details**:
- **Path**: `{{ screenshot.file }}`
- **Dimensions**: {{ screenshot.dimensions.width }}x{{ screenshot.dimensions.height }} pixels
- **Size**: {{ screenshot.file_size_human }}
- **Format**: {{ screenshot.format }}
- **Last Modified**: {{ screenshot.last_modified }}

**Tags**: {% for tag in screenshot.manifest_tags %}{{ tag }}{% if not loop.last %}, {% endif %}{% endfor %}

**Used In**: 
{% for usage in screenshot.used_in_docs %}
- {{ usage }}
{% endfor %}

{% if screenshot.extracted_text %}
**Extracted Text**: {{ screenshot.extracted_text }}
{% endif %}

---
{% endif %}
{% endfor %}

## Complete Asset Catalog

| Screenshot | Title | Type | Dimensions | Size | Used In |
|------------|-------|------|------------|------|---------|
{% for screenshot in screenshots %}
| ![{{ screenshot.manifest_title }}]({{ screenshot.file }}) | {{ screenshot.manifest_title }} | {{ screenshot.manifest_tags[0] if screenshot.manifest_tags else 'general' }} | {{ screenshot.dimensions.width }}x{{ screenshot.dimensions.height }} | {{ screenshot.file_size_human }} | {{ screenshot.used_in_docs|length }} doc(s) |
{% endfor %}

## File Integrity

All screenshot files are validated for integrity and existence. File hashes are maintained for change detection.

{% for screenshot in screenshots %}
- **{{ screenshot.file }}**: `{{ screenshot.file_hash[:16] }}...` ({{ screenshot.analysis_status }})
{% endfor %}

## Configuration

Screenshots are managed through the configuration manifest: [`config/screenshots.yaml`](config/screenshots.yaml)

For adding new screenshots, follow the [Entity Creation Guide](docs/ENTITY_CREATION_GUIDE.md) principles:
1. Add file to `screenshots/` directory
2. Register in `config/screenshots.yaml` with metadata
3. Run analysis: `python3 scripts/utilities/analyze_screenshots.py`
4. Regenerate documentation: `python3 scripts/utilities/generate_screenshots_doc.py`

---

**Generated from manifest**: `{{ manifest_file }}`  
**Analysis timestamp**: {{ analysis_timestamp }}  
**Generation timestamp**: {{ generation_timestamp }}  

Following WARP.md principles: Configuration-driven, no hard-coding, automated validation.