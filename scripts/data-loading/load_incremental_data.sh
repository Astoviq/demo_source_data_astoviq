#!/bin/bash

# Load Incremental Data into ClickHouse
# =====================================
# Loads *_incremental.csv.gz files generated by Universal Incremental Generator V2
# Handles both INSERT operations for new data and UPDATE-style merges

set -euo pipefail

# Configuration
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"
source "$PROJECT_ROOT/.env"

# ClickHouse configuration
CLICKHOUSE_CONTAINER="${CLICKHOUSE_CONTAINER_NAME:-eurostyle_clickhouse_retail}"
DATA_PATH="$PROJECT_ROOT/data/csv"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_section() {
    echo ""
    echo -e "${BLUE}========================================${NC}"
    echo -e "${BLUE} $1${NC}"
    echo -e "${BLUE}========================================${NC}"
}

check_container() {
    if ! docker ps --filter "name=$CLICKHOUSE_CONTAINER" --format "{{.Names}}" | grep -q "$CLICKHOUSE_CONTAINER"; then
        echo -e "${RED}‚ùå ClickHouse container '$CLICKHOUSE_CONTAINER' is not running${NC}"
        echo -e "${YELLOW}üí° Start it with: ./eurostyle.sh start${NC}"
        exit 1
    fi
}

load_incremental_file() {
    local file_path="$1"
    local filename=$(basename "$file_path")
    
    # Parse database and table from filename: 
    # Patterns: eurostyle_operational.orders_incremental.csv.gz, eurostyle_finance.gl_journal_headers_incremental.csv.gz
    if [[ "$filename" =~ ^([^.]+)\.(.+)_(incremental|updates)\.csv\.gz$ ]]; then
        local database="${BASH_REMATCH[1]}"
        local table="${BASH_REMATCH[2]}"
        local operation_type="${BASH_REMATCH[3]}"
        
        echo -e "${BLUE}üì• Loading $filename ($operation_type) into $database.$table${NC}"
        
        # Check if table exists
        local table_exists=$(docker exec "$CLICKHOUSE_CONTAINER" clickhouse-client \
            --query "SELECT count() FROM system.tables WHERE database = '$database' AND name = '$table'" 2>/dev/null || echo "0")
        
        if [ "$table_exists" = "0" ]; then
            echo -e "${YELLOW}‚ö†Ô∏è Table $database.$table does not exist, skipping${NC}"
            return 1
        fi
        
        # Load data using INSERT format for incremental data
        if cat "$file_path" | gunzip | docker exec -i "$CLICKHOUSE_CONTAINER" \
            clickhouse-client --database="$database" \
            --query="INSERT INTO $table FORMAT CSVWithNames" 2>/dev/null; then
            
            # Get row count after insert
            local new_count=$(docker exec "$CLICKHOUSE_CONTAINER" clickhouse-client \
                --database="$database" \
                --query="SELECT count() FROM $table" 2>/dev/null || echo "unknown")
            
            echo -e "${GREEN}‚úÖ Successfully loaded $filename${NC}"
            echo -e "${GREEN}   Table $database.$table now has $new_count total rows${NC}"
            return 0
        else
            echo -e "${RED}‚ùå Failed to load $filename${NC}"
            return 1
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è Filename $filename doesn't match expected pattern, skipping${NC}"
        return 1
    fi
}

main() {
    print_section "Loading Incremental Data"
    
    check_container
    
    echo -e "${YELLOW}üìÇ Searching for incremental data files in: $DATA_PATH${NC}"
    
    # Find all *_incremental.csv.gz and *_updates.csv.gz files
    local incremental_files=()
    while IFS= read -r -d '' file; do
        incremental_files+=("$file")
    done < <(find "$DATA_PATH" \( -name "*_incremental.csv.gz" -o -name "*_updates.csv.gz" \) -type f -print0 2>/dev/null || true)
    
    if [ ${#incremental_files[@]} -eq 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è No incremental data files found in $DATA_PATH${NC}"
        echo -e "${BLUE}üí° Incremental files should match patterns: *_incremental.csv.gz or *_updates.csv.gz${NC}"
        echo -e "${BLUE}üí° Generate incremental data first with: ./eurostyle.sh increment${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}üìä Found ${#incremental_files[@]} incremental data file(s)${NC}"
    echo ""
    
    # Load each file
    local success_count=0
    local total_count=${#incremental_files[@]}
    
    for file in "${incremental_files[@]}"; do
        if load_incremental_file "$file"; then
            ((success_count++))
        fi
    done
    
    echo ""
    print_section "Incremental Loading Summary"
    echo -e "${GREEN}‚úÖ Successfully loaded: $success_count/$total_count files${NC}"
    
    if [ $success_count -eq $total_count ]; then
        echo -e "${GREEN}üéâ All incremental data loaded successfully!${NC}"
        
        # Optional: Show updated database status
        echo ""
        echo -e "${BLUE}üìä Updated Database Status:${NC}"
        for db in "eurostyle_operational" "eurostyle_finance" "eurostyle_webshop" "eurostyle_hr" "eurostyle_pos"; do
            local count=$(docker exec "$CLICKHOUSE_CONTAINER" clickhouse-client \
                --database="$db" \
                --query="SELECT sum(total_rows) FROM system.tables WHERE database = '$db' AND total_rows > 0" 2>/dev/null || echo "0")
            
            # Handle ClickHouse NULL values
            if [ "$count" = "\\N" ] || [ "$count" = "" ]; then
                count="0"
            fi
            
            if [ "$count" -gt 0 ] 2>/dev/null; then
                echo -e "${GREEN}  ‚úÖ $db: $count records${NC}"
            fi
        done
        
        exit 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è Some files failed to load${NC}"
        exit 1
    fi
}

main "$@"